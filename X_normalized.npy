{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "eeb8c98f-0324-4561-b4e8-042d174abc4b",
   "metadata": {},
   "source": [
    "# NORMALIZATION PROBLEM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2f315a12-e8e1-419a-bc5f-3c65aaac5799",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a82f736-a2d7-4e2c-8fa5-16fc24109f55",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = np.random.random((5,5))\n",
    "\n",
    "#Finding the square root of each values in the array X\n",
    "\n",
    "f = np.std(X)\n",
    "\n",
    "#Finding the mean of all the values inside the array\n",
    "\n",
    "v = np.mean(X)\n",
    "\n",
    "#Formula for Normalization, used on each value in the array\n",
    "\n",
    "z = (X - v) / f\n",
    "\n",
    "#Print the final values after the Normalization solution\n",
    "print (z)\n",
    "\n",
    "#save array Z using the file name X_normalized.npy and printing that its succesfully saved\n",
    "np.save('X_normalized.npy', z)\n",
    "\n",
    "print (\"\\nThe work has been saved at 'X_normalized.npy' \")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
