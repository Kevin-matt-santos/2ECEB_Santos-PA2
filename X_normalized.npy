{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.96171602,  2.02971456, -0.85028336, -0.29627432, -0.90853092],\n",
       "       [-0.1279815 ,  0.61426681, -1.17566755, -0.09706079, -0.29273951],\n",
       "       [ 0.44952025, -1.32407399,  0.27881095, -0.06894773, -1.56778732],\n",
       "       [ 1.71053825, -1.09254474,  1.2839209 , -0.53182242,  1.74748116],\n",
       "       [-1.00976036,  0.38311302,  0.13559072, -1.02880754,  0.77760941]])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Making an 5x5 array with random values inside the variable X\n",
    "X = np.random.random((5,5))\n",
    "\n",
    "#Finding the square root of each values in the array X\n",
    "f = np.std(X)\n",
    "\n",
    "# Finding the mean of all the values inside the array\n",
    "v = np.mean(X)\n",
    "\n",
    "#Formula for Normalization, used on each value in the array\n",
    "z = (X - v) / f\n",
    "\n",
    "#Print the final values after the Normalization solution\n",
    "z\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
