{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "10fe4df0-b7eb-4ac8-a320-d80366a5a6c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4e115ed3-09b7-4aaf-b19d-8c7be8c6bcab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[  1   2   3   4   5   6   7   8   9  10]\n",
      " [ 11  12  13  14  15  16  17  18  19  20]\n",
      " [ 21  22  23  24  25  26  27  28  29  30]\n",
      " [ 31  32  33  34  35  36  37  38  39  40]\n",
      " [ 41  42  43  44  45  46  47  48  49  50]\n",
      " [ 51  52  53  54  55  56  57  58  59  60]\n",
      " [ 61  62  63  64  65  66  67  68  69  70]\n",
      " [ 71  72  73  74  75  76  77  78  79  80]\n",
      " [ 81  82  83  84  85  86  87  88  89  90]\n",
      " [ 91  92  93  94  95  96  97  98  99 100]]\n",
      "\n",
      "[   9   36   81  144  225  324  441  576  729  900 1089 1296 1521 1764\n",
      " 2025 2304 2601 2916 3249 3600 3969 4356 4761 5184 5625 6084 6561 7056\n",
      " 7569 8100 8649 9216 9801]\n"
     ]
    }
   ],
   "source": [
    "# Making an Array with the values 1 to 100 inside the variable ndarray\n",
    "ndarray = np.arange(1,101,1)\n",
    "\n",
    "# Organizing the array by 10x10 in ascending order\n",
    "c = ndarray.reshape(10, 10)\n",
    "\n",
    "#Squaring all numbers in the array\n",
    "d = np.square(c)\n",
    "\n",
    "#Storing all elements that are divisible by 3 at variable e\n",
    "e = d[d % 3 == 0]\n",
    "\n",
    "#Printing the variable c which contains the values 1 to 100 in an 10x10 array\n",
    "print (c)\n",
    "\n",
    "#Space for asthethic \n",
    "print ()\n",
    "\n",
    "#Printing the variable e which contains all values divisible by 3\n",
    "print (e)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09fe583a-b847-4da8-a393-82bc4f03c765",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0959e1cb-a234-4133-998d-7732601827d7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
